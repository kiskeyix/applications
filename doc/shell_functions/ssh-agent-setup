#!/bin/sh
# Luis Mondesi <lmondesi@bloomberg.net>
# 2012-07-30
#
# Note that this script should run on all sh-like shells,
# not only bash.
#
# . ssh-agent-setup # from ~/.profile
#
# License: GPL
# CHANGES:
#   2022-10-20 - simplify loading keys
#   2022-05-24 - adds logic to support Darwin

echo "# running $0 (~/.ssh-agent-setup.bash)"

clean_old_sock()
{
    pkill -u $UID ssh-agent
    find /tmp /var/folders -uid $UID -name "agent.[0-9]*" -exec rm {} \;
    rmdir /tmp/ssh-* > /dev/null 2>&1
}

launch_agent()
{
    eval `ssh-agent -s`
}

load_keys()
{
    if [ ! -S "$SSH_AUTH_SOCK" ]; then
        if [ -z $UID ]; then
            echo "# setting UUID env var"
            UID=`id -u`
        fi
        echo "# setting SSH_AUTH_SOCK env var"
        SSH_AUTH_SOCK=`find /tmp /var/folders -uid $UID -name "agent.[0-9]*" -print 2> /dev/null|sort|tail -1`
        SSH_AGENT_PID=`echo $SSH_AUTH_SOCK|cut -d. -f2`
        echo export SSH_AUTH_SOCK=$SSH_AUTH_SOCK
        echo export SSH_AGENT_PID=$SSH_AGENT_PID
        export SSH_AUTH_SOCK SSH_AGENT_PID
    else
        echo "# reusing SSH_AUTH_SOCK='$SSH_AUTH_SOCK'"
    fi
    for key in ~/.ssh/id_[rd]sa* ~/.ssh/*/id_[rd]sa*; do
        if echo $key | egrep -q '\.pub$'; then
            continue
        fi
        # if key not loaded, attempt to load it
        if ssh-add -l |egrep -q "$key "; then
            continue
        fi
        echo "# Loading $key"
        ssh-add $key
        rc=$?
        if [ $rc = 2 ]; then
            echo "# Repairing ssh-agent ($rc)"
            clean_old_sock
            launch_agent
            echo "# Retry loading $key"
            ssh-add $key
        elif [ $rc = 1 ]; then
            echo "# Your key $key could not be loaded"
        fi
    done
}

load_keys
