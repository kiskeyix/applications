#!/bin/bash
# Delete a branch both local and in the remote repo
#
# If the branch is not merged to HEAD, it stops you.
#
# Usage: gitbranchdelete BRANCH_NAME
#
# Luis Mondesi <lemsx1@gmail.com>
# License: GPL

# We remove the branch from a remote repository
_git_remote_delete()
{
    git push origin --delete $1
    git remote prune origin
}

# only remove local branch if not merged to HEAD
_git_local_delete()
{
    _merged=0
    #git branch --no-color --merged | awk '{print $NF}'
    for branch in $(git for-each-ref --color=never --format='%(refname:lstrip=2)' refs/heads --merged); do
        if [[ $branch == $1 ]]; then
            _merged=1
            break
        fi
    done
    if [[ $_merged == 1 ]]; then
        git branch -d $1
    else
        printf "  ERROR: cannot delete local branch '$1'. It is not merged to HEAD\n"
        printf "\t delete by hand with: git branch -d '$1'\n"
        exit 1
    fi
}

if [[ -x `command -v git` ]]; then
    if git checkout main 2> /dev/null || git checkout master; then
        _local_found=0
        for branch in $(git for-each-ref --color=never --format='%(refname:lstrip=2)' refs/heads); do
            if [[ $branch == $1 ]]; then
                _local_found=1
                break
            fi
        done
        if [[ $_local_found == 1 ]]; then
            _git_local_delete $1
            _git_remote_delete $1
        else
            _git_remote_delete $1
        fi
    else
        echo "No 'main' (or 'master') branch" >> /dev/stderr
        exit 1
    fi
else
    echo "Git command missing" >> /dev/stderr
    exit 1
fi
